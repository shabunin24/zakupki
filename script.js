// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Web App
let tg = window.Telegram.WebApp;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
const botToken = window.BOT_CONFIG?.token || '8203311811:AAEbVoeZ0inIO7CUFuGUbwNRdoL2xfpxfPw';
const botApiUrl = `https://api.telegram.org/bot${botToken}`;

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentTab = 'home';
let favorites = [];
let searchHistory = [];
let userApplications = [];
let notifications = [];

// –ò–º–∏—Ç–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫
const mockPurchases = [
    {
        id: 1,
        number: "0128300000123000001",
        title: "–ü–æ—Å—Ç–∞–≤–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ –¥–ª—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É—á—Ä–µ–∂–¥–µ–Ω–∏–π",
        price: 2500000,
        currency: "RUB",
        customer: "–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è",
        region: "–ú–æ—Å–∫–≤–∞",
        deadline: "2024-12-15",
        status: "active",
        category: "–¢–æ–≤–∞—Ä—ã",
        subcategory: "–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞",
        description: "–ü–æ—Å—Ç–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤, –Ω–æ—É—Ç–±—É–∫–æ–≤ –∏ –ø–µ—Ä–∏—Ñ–µ—Ä–∏–π–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
        documents: ["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ.pdf", "–§–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏.doc"],
        contacts: {
            phone: "+7 (495) 123-45-67",
            email: "zakupki@digital.gov.ru",
            contact: "–ò–≤–∞–Ω–æ–≤ –ò.–ò."
        }
    },
    {
        id: 2,
        number: "0128300000123000002",
        title: "–£—Å–ª—É–≥–∏ –ø–æ —É–±–æ—Ä–∫–µ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –∑–¥–∞–Ω–∏–π",
        price: 500000,
        currency: "RUB",
        customer: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –≥–æ—Ä–æ–¥–∞",
        region: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        deadline: "2024-12-20",
        status: "active",
        category: "–£—Å–ª—É–≥–∏",
        subcategory: "–ë—ã—Ç–æ–≤—ã–µ —É—Å–ª—É–≥–∏",
        description: "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —É—Å–ª—É–≥–∏ –ø–æ —É–±–æ—Ä–∫–µ –∏ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∑–¥–∞–Ω–∏–π",
        documents: ["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ.pdf"],
        contacts: {
            phone: "+7 (812) 234-56-78",
            email: "zakupki@spb.gov.ru",
            contact: "–ü–µ—Ç—Ä–æ–≤ –ü.–ü."
        }
    },
    {
        id: 3,
        number: "0128300000123000003",
        title: "–ó–∞–∫—É–ø–∫–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
        price: 3500000,
        currency: "RUB",
        customer: "–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è",
        region: "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
        deadline: "2025-01-10",
        status: "active",
        category: "–¢–æ–≤–∞—Ä—ã",
        subcategory: "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ",
        description: "–ü–æ—Å—Ç–∞–≤–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏ –ª–µ—á–µ–±–Ω–æ–≥–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
        documents: ["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ.pdf", "–°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è.xlsx"],
        contacts: {
            phone: "+7 (383) 345-67-89",
            email: "zakupki@health.gov.ru",
            contact: "–°–∏–¥–æ—Ä–æ–≤ –°.–°."
        }
    },
    {
        id: 4,
        number: "0128300000123000004",
        title: "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –ø–æ —Ä–µ–º–æ–Ω—Ç—É –¥–æ—Ä–æ–≥",
        price: 15000000,
        currency: "RUB",
        customer: "–§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–µ –¥–æ—Ä–æ–∂–Ω–æ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ",
        region: "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä",
        deadline: "2025-02-15",
        status: "active",
        category: "–†–∞–±–æ—Ç—ã",
        subcategory: "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã",
        description: "–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö –¥–æ—Ä–æ–≥ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è",
        documents: ["–ü—Ä–æ–µ–∫—Ç–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è.pdf", "–°–º–µ—Ç–∞.xlsx"],
        contacts: {
            phone: "+7 (861) 456-78-90",
            email: "zakupki@roads.gov.ru",
            contact: "–ö–æ–∑–ª–æ–≤ –ö.–ö."
        }
    },
    {
        id: 5,
        number: "0128300000123000005",
        title: "–£—Å–ª—É–≥–∏ –ø–æ –æ–±—É—á–µ–Ω–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∞",
        price: 800000,
        currency: "RUB",
        customer: "–ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è",
        region: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
        deadline: "2025-01-25",
        status: "active",
        category: "–£—Å–ª—É–≥–∏",
        subcategory: "–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏",
        description: "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–∞—â–∏—Ö",
        documents: ["–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ–±—É—á–µ–Ω–∏—è.pdf", "–£—á–µ–±–Ω—ã–π –ø–ª–∞–Ω.doc"],
        contacts: {
            phone: "+7 (343) 567-89-01",
            email: "zakupki@education.gov.ru",
            contact: "–ú–æ—Ä–æ–∑–æ–≤ –ú.–ú."
        }
    }
];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram Web App
    if (tg) {
        tg.ready();
        tg.expand();
        tg.setHeaderColor('#007AFF');
        tg.setBackgroundColor('#f2f2f7');
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π
    initializeEvents();
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    loadInitialData();
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
    initializeSearch();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π
function initializeEvents() {
    // –°–æ–±—ã—Ç–∏—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–µ–Ω—é
    document.querySelectorAll('.menu-item').forEach(item => {
        item.addEventListener('click', function() {
            const section = this.dataset.section;
            handleMenuClick(section);
        });
    });
    
    // –°–æ–±—ã—Ç–∏—è –¥–ª—è –Ω–∏–∂–Ω–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.querySelectorAll('.nav-item').forEach(item => {
        item.addEventListener('click', function() {
            const tab = this.dataset.tab;
            switchTab(tab);
        });
    });
    
    // –°–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    document.querySelectorAll('.action-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const text = this.textContent;
            handleActionClick(text);
        });
    });
    
    // –°–æ–±—ã—Ç–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    initializeModalEvents();
    
    // –°–æ–±—ã—Ç–∏—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫—É–ø–æ–∫
    document.querySelectorAll('.purchase-item').forEach(item => {
        item.addEventListener('click', function() {
            showPurchaseDetails(this);
        });
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–µ–Ω—é
function handleMenuClick(section) {
    switch(section) {
        case 'search':
            showSearchModal();
            break;
        case 'favorites':
            showFavorites();
            break;
        case 'categories':
            showCategories();
            break;
        case 'news':
            showNews();
            break;
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
function switchTab(tab) {
    document.querySelectorAll('.nav-item').forEach(item => {
        item.classList.remove('active');
    });
    
    document.querySelector(`[data-tab="${tab}"]`).classList.add('active');
    currentTab = tab;
    showTabContent(tab);
}

// –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∫–ª–∞–¥–∫–∏
function showTabContent(tab) {
    hideAllSections();
    
    switch(tab) {
        case 'home':
            showHomeContent();
            break;
        case 'search':
            showSearchContent();
            break;
        case 'favorites':
            showFavoritesContent();
            break;
        case 'profile':
            showProfileContent();
            break;
    }
}

// –°–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö —Å–µ–∫—Ü–∏–π
function hideAllSections() {
    const sections = ['home', 'search', 'favorites', 'profile'];
    sections.forEach(section => {
        const element = document.querySelector(`.${section}-content`);
        if (element) {
            element.style.display = 'none';
        }
    });
}

// –ü–æ–∫–∞–∑ –¥–æ–º–∞—à–Ω–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function showHomeContent() {
    document.querySelector('.main-menu').style.display = 'grid';
    document.querySelector('.quick-actions').style.display = 'block';
    document.querySelector('.recent-purchases').style.display = 'block';
}

// –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–∏—Å–∫–∞
function showSearchContent() {
    if (!document.querySelector('.search-content')) {
        createSearchContent();
    }
    
    document.querySelector('.search-content').style.display = 'block';
    document.querySelector('.main-menu').style.display = 'none';
    document.querySelector('.quick-actions').style.display = 'none';
    document.querySelector('.recent-purchases').style.display = 'none';
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–∏—Å–∫–∞
function createSearchContent() {
    const searchContent = document.createElement('div');
    searchContent.className = 'search-content';
    searchContent.innerHTML = `
        <div style="padding: 20px;">
            <h3 style="margin-bottom: 20px; font-size: 24px;">üîç –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∑–∞–∫—É–ø–æ–∫</h3>
            
            <!-- –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–∏—Å–∫ -->
            <div style="display: flex; gap: 10px; margin-bottom: 20px;">
                <input type="text" id="mainSearchInput" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ, –Ω–æ–º–µ—Ä –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–∫—É–ø–∫–∏" style="flex: 1; padding: 12px; border: 1px solid #e5e5e7; border-radius: 8px; font-size: 16px;">
                <button onclick="performAdvancedSearch()" style="padding: 12px 20px; background: #007AFF; color: white; border: none; border-radius: 8px; font-weight: 600;">üîç</button>
            </div>
            
            <!-- –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã -->
            <div class="search-filters" style="background: #f8f9fa; padding: 16px; border-radius: 8px; margin-bottom: 20px;">
                <h4 style="margin-bottom: 16px; color: #333;">–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</h4>
                
                <!-- –ö–∞—Ç–µ–≥–æ—Ä–∏—è -->
                <div style="margin-bottom: 16px;">
                    <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</label>
                    <select id="categoryFilter" style="width: 100%; padding: 12px; border: 1px solid #e5e5e7; border-radius: 8px; font-size: 16px;">
                        <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                        <option value="–¢–æ–≤–∞—Ä—ã">–¢–æ–≤–∞—Ä—ã</option>
                        <option value="–£—Å–ª—É–≥–∏">–£—Å–ª—É–≥–∏</option>
                        <option value="–†–∞–±–æ—Ç—ã">–†–∞–±–æ—Ç—ã</option>
                    </select>
                </div>
                
                <!-- –†–µ–≥–∏–æ–Ω -->
                <div style="margin-bottom: 16px;">
                    <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">–†–µ–≥–∏–æ–Ω:</label>
                    <select id="regionFilter" style="width: 100%; padding: 12px; border: 1px solid #e5e5e7; border-radius: 8px; font-size: 16px;">
                        <option value="">–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã</option>
                        <option value="–ú–æ—Å–∫–≤–∞">–ú–æ—Å–∫–≤–∞</option>
                        <option value="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥">–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</option>
                        <option value="–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫">–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫</option>
                        <option value="–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä">–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä</option>
                        <option value="–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥">–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥</option>
                    </select>
                </div>
                
                <!-- –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω -->
                <div style="margin-bottom: 16px;">
                    <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">–¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω (‚ÇΩ):</label>
                    <div style="display: flex; gap: 10px;">
                        <input type="number" id="priceFrom" placeholder="–û—Ç" style="flex: 1; padding: 12px; border: 1px solid #e5e5e7; border-radius: 8px; font-size: 16px;">
                        <input type="number" id="priceTo" placeholder="–î–æ" style="flex: 1; padding: 12px; border: 1px solid #e5e5e7; border-radius: 8px; font-size: 16px;">
                    </div>
                </div>
                
                <!-- –°—Ç–∞—Ç—É—Å -->
                <div style="margin-bottom: 16px;">
                    <label style="display: block; margin-bottom: 8px; font-weight: 600; color: #333;">–°—Ç–∞—Ç—É—Å:</label>
                    <select id="statusFilter" style="width: 100%; padding: 12px; border: 1px solid #e5e5e7; border-radius: 8px; font-size: 16px;">
                        <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                        <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                        <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ</option>
                    </select>
                </div>
                
                <!-- –ö–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ -->
                <div style="display: flex; gap: 10px;">
                    <button onclick="applyFilters()" style="flex: 1; padding: 12px; background: #007AFF; color: white; border: none; border-radius: 8px; font-weight: 600;">
                        ‚úÖ –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                    </button>
                    <button onclick="clearFilters()" style="flex: 1; padding: 12px; background: #f2f2f7; color: #007AFF; border: none; border-radius: 8px; font-weight: 600;">
                        üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å
                    </button>
                </div>
            </div>
            
            <!-- –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã -->
            <div class="quick-filters" style="margin-bottom: 20px;">
                <h4 style="margin-bottom: 12px; color: #333;">–ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã:</h4>
                <div style="display: flex; gap: 8px; flex-wrap: wrap;">
                    <button onclick="quickFilter('price', 'low')" style="padding: 8px 16px; background: #f2f2f7; color: #007AFF; border: none; border-radius: 20px; font-size: 14px;">
                        üí∞ –î–æ 1 –º–ª–Ω ‚ÇΩ
                    </button>
                    <button onclick="quickFilter('price', 'high')" style="padding: 8px 16px; background: #f2f2f7; color: #007AFF; border: none; border-radius: 20px; font-size: 14px;">
                        üíé –û—Ç 10 –º–ª–Ω ‚ÇΩ
                    </button>
                    <button onclick="quickFilter('deadline', 'week')" style="padding: 8px 16px; background: #f2f2f7; color: #007AFF; border: none; border-radius: 20px; font-size: 14px;">
                        ‚è∞ –î–æ –Ω–µ–¥–µ–ª–∏
                    </button>
                    <button onclick="quickFilter('category', 'services')" style="padding: 8px 16px; background: #f2f2f7; color: #007AFF; border: none; border-radius: 20px; font-size: 14px;">
                        üõ†Ô∏è –£—Å–ª—É–≥–∏
                    </button>
                </div>
            </div>
            
            <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ -->
            <div class="search-results">
                <h4 id="resultsHeader">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞</h4>
                <div class="results-list"></div>
            </div>
        </div>
    `;
    
    document.querySelector('.app-container').appendChild(searchContent);
}

// –ü–æ–∫–∞–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
function showFavorites() {
    if (favorites.length === 0) {
        showModal('–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', `
            <div style="padding: 20px; text-align: center;">
                <div style="font-size: 48px; margin-bottom: 16px; color: #8e8e93;">‚≠ê</div>
                <h3 style="margin-bottom: 16px;">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫</h3>
                <p style="color: #666; margin-bottom: 20px;">–î–æ–±–∞–≤–ª—è–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –∑–∞–∫—É–ø–∫–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞</p>
                <button onclick="switchTab('search')" style="padding: 12px 24px; background: #007AFF; color: white; border: none; border-radius: 8px; font-weight: 600;">
                    üîç –ù–∞–π—Ç–∏ –∑–∞–∫—É–ø–∫–∏
                </button>
            </div>
        `);
        return;
    }
    
    let favoritesHTML = '<div style="padding: 20px;"><h3 style="margin-bottom: 20px;">–ò–∑–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏</h3>';
    
    favorites.forEach(favoriteId => {
        const purchase = mockPurchases.find(p => p.id === favoriteId);
        if (purchase) {
            favoritesHTML += `
                <div style="background: white; padding: 16px; border-radius: 12px; margin-bottom: 16px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                    <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 12px;">
                        <div style="flex: 1;">
                            <h4 style="margin-bottom: 8px; color: #333;">${purchase.title}</h4>
                            <div style="font-size: 12px; color: #666; margin-bottom: 8px;">
                                ‚Ññ${purchase.number} ‚Ä¢ ${purchase.region}
                            </div>
                        </div>
                        <button onclick="removeFromFavorites(${purchase.id})" style="padding: 4px 8px; background: #FF3B30; color: white; border: none; border-radius: 4px; font-size: 12px;">
                            ‚ùå
                        </button>
                    </div>
                    
                    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 12px;">
                        <span style="color: #007AFF; font-weight: 600;">
                            ${formatPrice(purchase.price, purchase.currency)}
                        </span>
                        <span style="color: #999; font-size: 12px;">
                            –î–æ ${formatDate(purchase.deadline)}
                        </span>
                    </div>
                    
                    <div style="display: flex; gap: 8px;">
                        <button onclick="showPurchaseDetails(${purchase.id})" style="flex: 1; padding: 8px; background: #f2f2f7; color: #007AFF; border: none; border-radius: 6px; font-size: 12px;">
                            üìã –î–µ—Ç–∞–ª–∏
                        </button>
                        <button onclick="submitApplication(${purchase.id})" style="flex: 1; padding: 8px; background: #34C759; color: white; border: none; border-radius: 6px; font-size: 12px;">
                            üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É
                        </button>
                    </div>
                </div>
            `;
        }
    });
    
    favoritesHTML += '</div>';
    showModal('–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', favoritesHTML);
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
function removeFromFavorites(purchaseId) {
    favorites = favorites.filter(id => id !== purchaseId);
    saveFavorites();
    
    showNotification('–£–±—Ä–∞–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    showFavorites();
}

// –ü–æ–∫–∞–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
function showCategories() {
    const categories = [
        '–¢–æ–≤–∞—Ä—ã', '–†–∞–±–æ—Ç—ã', '–£—Å–ª—É–≥–∏', '–¢–µ—Ö–Ω–∏–∫–∞', 
        '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', '–ú–µ–¥–∏—Ü–∏–Ω–∞', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç'
    ];
    
    let categoriesHTML = '<div style="padding: 20px;"><h3 style="margin-bottom: 20px;">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–∫—É–ø–æ–∫</h3><div style="display: grid; grid-template-columns: 1fr 1fr; gap: 16px;">';
    
    categories.forEach(category => {
        categoriesHTML += `
            <div style="background: white; padding: 20px; border-radius: 12px; text-align: center; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                <div style="font-size: 24px; margin-bottom: 8px;">üìÅ</div>
                <span style="font-size: 14px; font-weight: 500;">${category}</span>
            </div>
        `;
    });
    
    categoriesHTML += '</div></div>';
    showModal('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', categoriesHTML);
}

// –ü–æ–∫–∞–∑ –Ω–æ–≤–æ—Å—Ç–µ–π
function showNews() {
    const news = [
        { title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫—É–ø–æ–∫', date: '15.12.2024', content: '–í–Ω–µ–¥—Ä–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' },
        { title: '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ', date: '10.12.2024', content: '–û–±–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤' },
        { title: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ', date: '05.12.2024', content: '–°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ 20 –¥–µ–∫–∞–±—Ä—è —Å 02:00 –¥–æ 06:00' }
    ];
    
    let newsHTML = '<div style="padding: 20px;"><h3 style="margin-bottom: 20px;">–ù–æ–≤–æ—Å—Ç–∏</h3>';
    
    news.forEach(item => {
        newsHTML += `
            <div style="background: white; padding: 16px; border-radius: 12px; margin-bottom: 16px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                <h4 style="margin-bottom: 8px; color: #007AFF;">${item.title}</h4>
                <p style="color: #666; font-size: 14px; margin-bottom: 8px;">${item.content}</p>
                <span style="color: #999; font-size: 12px;">${item.date}</span>
            </div>
        `;
    });
    
    newsHTML += '</div>';
    showModal('–ù–æ–≤–æ—Å—Ç–∏', newsHTML);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–∞–º –¥–µ–π—Å—Ç–≤–∏–π
function handleActionClick(actionText) {
    switch(actionText) {
        case '–ù–∞–π—Ç–∏ –∑–∞–∫—É–ø–∫—É':
            showSearchModal();
            break;
        case '–ú–æ–∏ –∑–∞—è–≤–∫–∏':
            showMyApplications();
            break;
        case '–ü–æ–º–æ—â—å':
            showHelp();
            break;
    }
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ–∏—Å–∫–∞
function showSearchModal() {
    const modal = document.getElementById('searchModal');
    modal.classList.add('active');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function initializeModalEvents() {
    document.querySelectorAll('.close-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const modal = this.closest('.modal');
            modal.classList.remove('active');
        });
    });
    
    document.querySelectorAll('.modal').forEach(modal => {
        modal.addEventListener('click', function(e) {
            if (e.target === this) {
                this.classList.remove('active');
            }
        });
    });
    
    const searchSubmitBtn = document.querySelector('.search-submit-btn');
    if (searchSubmitBtn) {
        searchSubmitBtn.addEventListener('click', performSearch);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
function initializeSearch() {
    const searchInput = document.querySelector('.search-input');
    if (searchInput) {
        searchInput.addEventListener('input', handleSearchInput);
        searchInput.addEventListener('focus', showSearchSuggestions);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –≤ –ø–æ–∏—Å–∫
function handleSearchInput(e) {
    const query = e.target.value.trim();
    
    if (query.length > 2) {
        const suggestions = getSearchSuggestions(query);
        showSearchSuggestions(suggestions);
    } else {
        hideSearchSuggestions();
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫
function getSearchSuggestions(query) {
    const suggestions = [];
    const lowerQuery = query.toLowerCase();
    
    // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    mockPurchases.forEach(purchase => {
        if (purchase.title.toLowerCase().includes(lowerQuery)) {
            suggestions.push({
                type: 'title',
                text: purchase.title,
                purchase: purchase
            });
        }
    });
    
    // –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    mockPurchases.forEach(purchase => {
        if (purchase.category.toLowerCase().includes(lowerQuery) || 
            purchase.subcategory.toLowerCase().includes(lowerQuery)) {
            suggestions.push({
                type: 'category',
                text: `${purchase.category} - ${purchase.subcategory}`,
                purchase: purchase
            });
        }
    });
    
    // –ü–æ–∏—Å–∫ –ø–æ —Ä–µ–≥–∏–æ–Ω—É
    mockPurchases.forEach(purchase => {
        if (purchase.region.toLowerCase().includes(lowerQuery)) {
            suggestions.push({
                type: 'region',
                text: purchase.region,
                purchase: purchase
            });
        }
    });
    
    return suggestions.slice(0, 5); // –ú–∞–∫—Å–∏–º—É–º 5 –ø–æ–¥—Å–∫–∞–∑–æ–∫
}

// –ü–æ–∫–∞–∑ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫
function showSearchSuggestions(suggestions = null) {
    let suggestionsToShow = suggestions;
    
    if (!suggestionsToShow) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–∏—Å–∫–∏
        suggestionsToShow = searchHistory.slice(0, 5).map(item => ({
            type: 'history',
            text: item,
            isHistory: true
        }));
    }
    
    if (suggestionsToShow.length === 0) return;
    
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –±–ª–æ–∫ –ø–æ–¥—Å–∫–∞–∑–æ–∫
    let suggestionsBlock = document.querySelector('.search-suggestions');
    if (!suggestionsBlock) {
        suggestionsBlock = document.createElement('div');
        suggestionsBlock.className = 'search-suggestions';
        suggestionsBlock.style.cssText = `
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #e5e5e7;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            z-index: 1000;
            max-height: 300px;
            overflow-y: auto;
        `;
        
        const searchContainer = document.querySelector('.search-container');
        searchContainer.style.position = 'relative';
        searchContainer.appendChild(suggestionsBlock);
    }
    
    // –û—á–∏—â–∞–µ–º –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏
    suggestionsBlock.innerHTML = '';
    
    suggestionsToShow.forEach(suggestion => {
        const item = document.createElement('div');
        item.className = 'suggestion-item';
        item.style.cssText = `
            padding: 12px 16px;
            border-bottom: 1px solid #f0f0f0;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
        `;
        
        if (suggestion.isHistory) {
            item.innerHTML = `
                <span style="color: #8e8e93;">üïí</span>
                <span style="color: #666;">${suggestion.text}</span>
            `;
        } else {
            const icon = suggestion.type === 'title' ? 'üìã' : 
                        suggestion.type === 'category' ? 'üìÅ' : 'üìç';
            item.innerHTML = `
                <span style="color: #007AFF;">${icon}</span>
                <span>${suggestion.text}</span>
            `;
        }
        
        item.addEventListener('click', () => {
            if (suggestion.purchase) {
                showPurchaseDetails(suggestion.purchase);
            } else if (suggestion.isHistory) {
                document.querySelector('.search-input').value = suggestion.text;
                performSearch(suggestion.text);
            }
            hideSearchSuggestions();
        });
        
        suggestionsBlock.appendChild(item);
    });
}

// –°–∫—Ä—ã—Ç–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫
function hideSearchSuggestions() {
    const suggestionsBlock = document.querySelector('.search-suggestions');
    if (suggestionsBlock) {
        suggestionsBlock.remove();
    }
}

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
function performSearch(query = null) {
    const searchInput = document.querySelector('.search-input');
    const queryText = query || searchInput.value.trim();
    
    if (!queryText) {
        showNotification('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å');
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞
    if (!searchHistory.includes(queryText)) {
        searchHistory.unshift(queryText);
        searchHistory = searchHistory.slice(0, 10); // –ú–∞–∫—Å–∏–º—É–º 10 –∑–∞–ø–∏—Å–µ–π
        localStorage.setItem('zakupki_search_history', JSON.stringify(searchHistory));
    }
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫
    const results = searchPurchases(queryText);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    showSearchResults(results, queryText);
    
    // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏
    hideSearchSuggestions();
}

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∑–∞–∫—É–ø–æ–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
function searchPurchases(query, filters = {}) {
    const lowerQuery = query ? query.toLowerCase() : '';
    const results = [];
    
    mockPurchases.forEach(purchase => {
        let score = 0;
        let passesFilters = true;
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        if (filters.category && purchase.category !== filters.category) {
            passesFilters = false;
        }
        
        if (filters.region && purchase.region !== filters.region) {
            passesFilters = false;
        }
        
        if (filters.status && purchase.status !== filters.status) {
            passesFilters = false;
        }
        
        if (filters.priceFrom && purchase.price < filters.priceFrom) {
            passesFilters = false;
        }
        
        if (filters.priceTo && purchase.price > filters.priceTo) {
            passesFilters = false;
        }
        
        if (!passesFilters) return;
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, –≤—ã—á–∏—Å–ª—è–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
        if (lowerQuery) {
            // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
            if (purchase.title.toLowerCase().includes(lowerQuery)) {
                score += 100;
            }
            
            // –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            if (purchase.category.toLowerCase().includes(lowerQuery) || 
                purchase.subcategory.toLowerCase().includes(lowerQuery)) {
                score += 50;
            }
            
            // –ü–æ–∏—Å–∫ –ø–æ —Ä–µ–≥–∏–æ–Ω—É
            if (purchase.region.toLowerCase().includes(lowerQuery)) {
                score += 30;
            }
            
            // –ü–æ–∏—Å–∫ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
            if (purchase.description.toLowerCase().includes(lowerQuery)) {
                score += 20;
            }
            
            // –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –∑–∞–∫—É–ø–∫–∏
            if (purchase.number.includes(query)) {
                score += 80;
            }
            
            if (score > 0) {
                results.push({ ...purchase, score });
            }
        } else {
            // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—à–µ–¥—à–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
            results.push({ ...purchase, score: 0 });
        }
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏, –∑–∞—Ç–µ–º –ø–æ —Ü–µ–Ω–µ
    return results.sort((a, b) => {
        if (b.score !== a.score) {
            return b.score - a.score;
        }
        return a.price - b.price;
    });
}

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
function performAdvancedSearch() {
    const searchInput = document.getElementById('mainSearchInput');
    const query = searchInput ? searchInput.value.trim() : '';
    
    const filters = getCurrentFilters();
    const results = searchPurchases(query, filters);
    
    showSearchResults(results, query, filters);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
function getCurrentFilters() {
    const categoryFilter = document.getElementById('categoryFilter');
    const regionFilter = document.getElementById('regionFilter');
    const statusFilter = document.getElementById('statusFilter');
    const priceFrom = document.getElementById('priceFrom');
    const priceTo = document.getElementById('priceTo');
    
    return {
        category: categoryFilter ? categoryFilter.value : '',
        region: regionFilter ? regionFilter.value : '',
        status: statusFilter ? statusFilter.value : '',
        priceFrom: priceFrom && priceFrom.value ? parseInt(priceFrom.value) : null,
        priceTo: priceTo && priceTo.value ? parseInt(priceTo.value) : null
    };
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function applyFilters() {
    performAdvancedSearch();
}

// –û—á–∏—Å—Ç–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function clearFilters() {
    const categoryFilter = document.getElementById('categoryFilter');
    const regionFilter = document.getElementById('regionFilter');
    const statusFilter = document.getElementById('statusFilter');
    const priceFrom = document.getElementById('priceFrom');
    const priceTo = document.getElementById('priceTo');
    const mainSearchInput = document.getElementById('mainSearchInput');
    
    if (categoryFilter) categoryFilter.value = '';
    if (regionFilter) regionFilter.value = '';
    if (statusFilter) statusFilter.value = '';
    if (priceFrom) priceFrom.value = '';
    if (priceTo) priceTo.value = '';
    if (mainSearchInput) mainSearchInput.value = '';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–∫—É–ø–∫–∏
    const results = searchPurchases('', {});
    showSearchResults(results, '', {});
}

// –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
function quickFilter(type, value) {
    let filters = {};
    
    switch (type) {
        case 'price':
            if (value === 'low') {
                filters.priceTo = 1000000;
            } else if (value === 'high') {
                filters.priceFrom = 10000000;
            }
            break;
        case 'deadline':
            if (value === 'week') {
                const weekFromNow = new Date();
                weekFromNow.setDate(weekFromNow.getDate() + 7);
                filters.deadlineFrom = weekFromNow.toISOString().split('T')[0];
            }
            break;
        case 'category':
            if (value === 'services') {
                filters.category = '–£—Å–ª—É–≥–∏';
            }
            break;
    }
    
    const results = searchPurchases('', filters);
    showSearchResults(results, '', filters);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI —Ñ–∏–ª—å—Ç—Ä–æ–≤
    updateFiltersUI(filters);
}

// –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
function showSearchResults(results, query, filters = {}) {
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ø–æ–∏—Å–∫–∞
    switchTab('search');
    
    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–∏—Å–∫–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!document.querySelector('.search-content')) {
        createSearchContent();
    }
    
    const searchContent = document.querySelector('.search-content');
    const resultsList = searchContent.querySelector('.results-list');
    const resultsHeader = searchContent.querySelector('#resultsHeader');
    
    if (resultsList) {
        resultsList.innerHTML = '';
        
        if (results.length === 0) {
            resultsList.innerHTML = `
                <div style="text-align: center; padding: 40px; color: #666;">
                    <div style="font-size: 48px; margin-bottom: 16px;">üîç</div>
                    <h3>–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</p>
                    <button onclick="clearFilters()" style="margin-top: 16px; padding: 12px 24px; background: #007AFF; color: white; border: none; border-radius: 8px; font-weight: 600;">
                        üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
                    </button>
                </div>
            `;
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
            let headerText = `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: ${results.length} –∑–∞–∫—É–ø–æ–∫`;
            
            if (query) {
                headerText += ` –ø–æ –∑–∞–ø—Ä–æ—Å—É "${query}"`;
            }
            
            const activeFilters = getActiveFiltersText(filters);
            if (activeFilters) {
                headerText += ` ‚Ä¢ ${activeFilters}`;
            }
            
            if (resultsHeader) {
                resultsHeader.innerHTML = headerText;
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            const statsHTML = createSearchStats(results);
            resultsList.appendChild(statsHTML);
            
            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            results.forEach((purchase, index) => {
                const resultItem = createPurchaseItem(purchase);
                resultItem.style.animationDelay = `${index * 0.1}s`;
                resultsList.appendChild(resultItem);
            });
        }
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–∏—Å–∫–∞
function createSearchStats(results) {
    const statsDiv = document.createElement('div');
    statsDiv.style.cssText = `
        background: #f8f9fa;
        padding: 16px;
        border-radius: 8px;
        margin-bottom: 16px;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 16px;
    `;
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const categories = {};
    const regions = {};
    let totalPrice = 0;
    
    results.forEach(purchase => {
        categories[purchase.category] = (categories[purchase.category] || 0) + 1;
        regions[purchase.region] = (regions[purchase.region] || 0) + 1;
        totalPrice += purchase.price;
    });
    
    const avgPrice = totalPrice / results.length;
    
    statsDiv.innerHTML = `
        <div style="text-align: center;">
            <div style="font-size: 24px; color: #007AFF; font-weight: 600;">${results.length}</div>
            <div style="font-size: 12px; color: #666;">–í—Å–µ–≥–æ –∑–∞–∫—É–ø–æ–∫</div>
        </div>
        <div style="text-align: center;">
            <div style="font-size: 24px; color: #34C759; font-weight: 600;">${Object.keys(categories).length}</div>
            <div style="font-size: 12px; color: #666;">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</div>
        </div>
        <div style="text-align: center;">
            <div style="font-size: 24px; color: #FF9500; font-weight: 600;">${Object.keys(regions).length}</div>
            <div style="font-size: 12px; color: #666;">–†–µ–≥–∏–æ–Ω–æ–≤</div>
        </div>
        <div style="text-align: center;">
            <div style="font-size: 24px; color: #5856D6; font-weight: 600;">${formatPrice(avgPrice, 'RUB')}</div>
            <div style="font-size: 12px; color: #666;">–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞</div>
        </div>
    `;
    
    return statsDiv;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
function getActiveFiltersText(filters) {
    const activeFilters = [];
    
    if (filters.category) activeFilters.push(filters.category);
    if (filters.region) activeFilters.push(filters.region);
    if (filters.status) activeFilters.push(filters.status === 'active' ? '–ê–∫—Ç–∏–≤–Ω—ã–µ' : '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ');
    if (filters.priceFrom) activeFilters.push(`–æ—Ç ${formatPrice(filters.priceFrom, 'RUB')}`);
    if (filters.priceTo) activeFilters.push(`–¥–æ ${formatPrice(filters.priceTo, 'RUB')}`);
    
    return activeFilters.length > 0 ? activeFilters.join(', ') : '';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —Ñ–∏–ª—å—Ç—Ä–æ–≤
function updateFiltersUI(filters) {
    const categoryFilter = document.getElementById('categoryFilter');
    const regionFilter = document.getElementById('regionFilter');
    const statusFilter = document.getElementById('statusFilter');
    const priceFrom = document.getElementById('priceFrom');
    const priceTo = document.getElementById('priceTo');
    
    if (categoryFilter && filters.category) categoryFilter.value = filters.category;
    if (regionFilter && filters.region) regionFilter.value = filters.region;
    if (statusFilter && filters.status) statusFilter.value = filters.status;
    if (priceFrom && filters.priceFrom) priceFrom.value = filters.priceFrom;
    if (priceTo && filters.priceTo) priceTo.value = filters.priceTo;
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∑–∞–∫—É–ø–∫–∏
function createPurchaseItem(purchase) {
    const item = document.createElement('div');
    item.className = 'purchase-item';
    item.style.cssText = `
        background: white;
        padding: 16px;
        border-radius: 12px;
        margin-bottom: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        cursor: pointer;
        transition: transform 0.2s;
    `;
    
    item.innerHTML = `
        <div class="purchase-header" style="margin-bottom: 12px;">
            <div class="purchase-number" style="font-size: 12px; color: #666; margin-bottom: 4px;">
                ‚Ññ${purchase.number}
            </div>
            <div class="purchase-title" style="font-size: 16px; font-weight: 600; color: #333; line-height: 1.4;">
                ${purchase.title}
            </div>
        </div>
        
        <div class="purchase-info" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 12px;">
            <span class="price" style="font-size: 18px; font-weight: 700; color: #007AFF;">
                ${formatPrice(purchase.price, purchase.currency)}
            </span>
            <span class="deadline" style="font-size: 14px; color: #666;">
                –î–æ ${formatDate(purchase.deadline)}
            </span>
        </div>
        
        <div class="purchase-details" style="display: flex; gap: 16px; font-size: 12px; color: #666;">
            <span>üìç ${purchase.region}</span>
            <span>üìÅ ${purchase.category}</span>
            <span>üë§ ${purchase.customer}</span>
        </div>
        
        <div class="purchase-actions" style="margin-top: 12px; display: flex; gap: 8px;">
            <button onclick="addToFavorites(${purchase.id})" style="flex: 1; padding: 8px; background: #007AFF; color: white; border: none; border-radius: 6px; font-size: 12px;">
                ‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
            </button>
            <button onclick="showPurchaseDetails(${purchase.id})" style="flex: 1; padding: 8px; background: #f2f2f7; color: #007AFF; border: none; border-radius: 6px; font-size: 12px;">
                üìã –ü–æ–¥—Ä–æ–±–Ω–µ–µ
            </button>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    item.addEventListener('click', (e) => {
        if (!e.target.tagName === 'BUTTON') {
            showPurchaseDetails(purchase);
        }
    });
    
    return item;
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã
function formatPrice(price, currency) {
    return new Intl.NumberFormat('ru-RU', {
        style: 'currency',
        currency: currency,
        minimumFractionDigits: 0
    }).format(price);
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU');
}

// –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫—É–ø–∫–∏
function showPurchaseDetails(purchaseId) {
    const purchase = typeof purchaseId === 'object' ? purchaseId : mockPurchases.find(p => p.id === purchaseId);
    
    if (!purchase) {
        showNotification('–ó–∞–∫—É–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    const detailsHTML = `
        <div style="padding: 20px;">
            <div style="margin-bottom: 20px;">
                <h3 style="margin-bottom: 8px; color: #333;">${purchase.title}</h3>
                <div style="font-size: 14px; color: #666; margin-bottom: 16px;">
                    ‚Ññ${purchase.number} ‚Ä¢ ${purchase.status === 'active' ? 'üü¢ –ê–∫—Ç–∏–≤–Ω–∞' : 'üî¥ –ó–∞–≤–µ—Ä—à–µ–Ω–∞'}
                </div>
            </div>
            
            <div style="background: #f8f9fa; padding: 16px; border-radius: 8px; margin-bottom: 16px;">
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 12px; margin-bottom: 12px;">
                    <div>
                        <strong>–¶–µ–Ω–∞:</strong><br>
                        <span style="color: #007AFF; font-weight: 600;">${formatPrice(purchase.price, purchase.currency)}</span>
                    </div>
                    <div>
                        <strong>–°—Ä–æ–∫ –ø–æ–¥–∞—á–∏:</strong><br>
                        <span style="color: #666;">${formatDate(purchase.deadline)}</span>
                    </div>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 12px;">
                    <div>
                        <strong>–ó–∞–∫–∞–∑—á–∏–∫:</strong><br>
                        <span style="color: #666;">${purchase.customer}</span>
                    </div>
                    <div>
                        <strong>–†–µ–≥–∏–æ–Ω:</strong><br>
                        <span style="color: #666;">${purchase.region}</span>
                    </div>
                </div>
                
                <div style="margin-top: 12px;">
                    <strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong><br>
                    <span style="color: #666;">${purchase.category} ‚Üí ${purchase.subcategory}</span>
                </div>
            </div>
            
            <div style="background: #f8f9fa; padding: 16px; border-radius: 8px; margin-bottom: 16px;">
                <strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong><br>
                <p style="color: #666; margin: 8px 0 0 0; line-height: 1.4;">${purchase.description}</p>
            </div>
            
            <div style="background: #f8f9fa; padding: 16px; border-radius: 8px; margin-bottom: 16px;">
                <strong>–î–æ–∫—É–º–µ–Ω—Ç—ã:</strong><br>
                <div style="margin-top: 8px;">
                    ${purchase.documents.map(doc => `
                        <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 8px;">
                            <span style="color: #007AFF;">üìÑ</span>
                            <span style="color: #666;">${doc}</span>
                            <button onclick="downloadDocument('${doc}')" style="margin-left: auto; padding: 4px 8px; background: #007AFF; color: white; border: none; border-radius: 4px; font-size: 12px;">
                                –°–∫–∞—á–∞—Ç—å
                            </button>
                        </div>
                    `).join('')}
                </div>
            </div>
            
            <div style="background: #f8f9fa; padding: 16px; border-radius: 8px; margin-bottom: 20px;">
                <strong>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</strong><br>
                <div style="margin-top: 8px;">
                    <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 8px;">
                        <span style="color: #007AFF;">üë§</span>
                        <span style="color: #666;">${purchase.contacts.contact}</span>
                    </div>
                    <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 8px;">
                        <span style="color: #007AFF;">üìû</span>
                        <span style="color: #666;">${purchase.contacts.phone}</span>
                    </div>
                    <div style="display: flex; align-items: center; gap: 8px;">
                        <span style="color: #007AFF;">‚úâÔ∏è</span>
                        <span style="color: #666;">${purchase.contacts.email}</span>
                    </div>
                </div>
            </div>
            
            <div style="display: flex; gap: 10px;">
                <button onclick="addToFavorites(${purchase.id})" style="flex: 1; padding: 12px; background: #007AFF; color: white; border: none; border-radius: 8px; font-weight: 600;">
                    ‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
                </button>
                <button onclick="submitApplication(${purchase.id})" style="flex: 1; padding: 12px; background: #34C759; color: white; border: none; border-radius: 8px; font-weight: 600;">
                    üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É
                </button>
            </div>
        </div>
    `;
    
    showModal('–î–µ—Ç–∞–ª–∏ –∑–∞–∫—É–ø–∫–∏', detailsHTML);
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
function addToFavorites(purchaseId) {
    const purchase = mockPurchases.find(p => p.id === purchaseId);
    if (!purchase) {
        showNotification('–ó–∞–∫—É–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    if (!favorites.includes(purchaseId)) {
        favorites.push(purchaseId);
        showNotification('–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
        sendUserNotification(`‚úÖ –ó–∞–∫—É–ø–∫–∞ "${purchase.title}" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ`);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
        saveFavorites();
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ
        const modal = document.querySelector('.modal');
        if (modal) {
            modal.classList.remove('active');
        }
    } else {
        showNotification('–£–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º');
    }
}

// –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏
function submitApplication(purchaseId) {
    const purchase = mockPurchases.find(p => p.id === purchaseId);
    if (!purchase) {
        showNotification('–ó–∞–∫—É–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–¥–∞–Ω–∞ –ª–∏ —É–∂–µ –∑–∞—è–≤–∫–∞
    const existingApplication = userApplications.find(app => app.purchaseId === purchaseId);
    if (existingApplication) {
        showNotification('–ó–∞—è–≤–∫–∞ —É–∂–µ –ø–æ–¥–∞–Ω–∞');
        return;
    }
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É
    const application = {
        id: Date.now(),
        purchaseId: purchaseId,
        purchaseTitle: purchase.title,
        purchaseNumber: purchase.number,
        status: 'submitted',
        submittedAt: new Date().toISOString(),
        price: purchase.price,
        currency: purchase.currency
    };
    
    userApplications.push(application);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
    localStorage.setItem('zakupki_applications', JSON.stringify(userApplications));
    
    showNotification('–ó–∞—è–≤–∫–∞ –ø–æ–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
    sendUserNotification(`üìù –ó–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–∫—É–ø–∫—É "${purchase.title}" –ø–æ–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ`);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.querySelector('.modal');
    if (modal) {
        modal.classList.remove('active');
    }
}

// –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
function downloadDocument(filename) {
    // –ò–º–∏—Ç–∞—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
    showNotification(`üìÑ –î–æ–∫—É–º–µ–Ω—Ç "${filename}" —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è...`);
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É
    setTimeout(() => {
        showNotification('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —Å–∫–∞—á–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    }, 2000);
}

// –ü–æ–∫–∞–∑ –º–æ–∏—Ö –∑–∞—è–≤–æ–∫
function showMyApplications() {
    if (userApplications.length === 0) {
        showModal('–ú–æ–∏ –∑–∞—è–≤–∫–∏', `
            <div style="padding: 20px; text-align: center;">
                <div style="font-size: 48px; margin-bottom: 16px; color: #8e8e93;">üìù</div>
                <h3 style="margin-bottom: 16px;">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫</h3>
                <p style="color: #666; margin-bottom: 20px;">–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∑–∞–∫—É–ø–∫—É</p>
                <button onclick="switchTab('search')" style="padding: 12px 24px; background: #007AFF; color: white; border: none; border-radius: 8px; font-weight: 600;">
                    üîç –ù–∞–π—Ç–∏ –∑–∞–∫—É–ø–∫–∏
                </button>
            </div>
        `);
        return;
    }
    
    let applicationsHTML = '<div style="padding: 20px;"><h3 style="margin-bottom: 20px;">–ú–æ–∏ –∑–∞—è–≤–∫–∏</h3>';
    
    userApplications.forEach(app => {
        const purchase = mockPurchases.find(p => p.id === app.purchaseId);
        const statusInfo = getStatusInfo(app.status);
        const submittedDate = new Date(app.submittedAt).toLocaleDateString('ru-RU');
        
        applicationsHTML += `
            <div style="background: white; padding: 16px; border-radius: 12px; margin-bottom: 16px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 12px;">
                    <div style="flex: 1;">
                        <h4 style="margin-bottom: 8px; color: #333;">${app.purchaseTitle}</h4>
                        <div style="font-size: 12px; color: #666; margin-bottom: 8px;">
                            ‚Ññ${app.purchaseNumber}
                        </div>
                    </div>
                    <span style="padding: 4px 8px; background: ${statusInfo.color}; color: white; border-radius: 4px; font-size: 12px; font-weight: 600;">
                        ${statusInfo.text}
                    </span>
                </div>
                
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 12px;">
                    <span style="color: #007AFF; font-weight: 600;">
                        ${formatPrice(app.price, app.currency)}
                    </span>
                    <span style="color: #999; font-size: 12px;">
                        –ü–æ–¥–∞–Ω–∞: ${submittedDate}
                    </span>
                </div>
                
                <div style="display: flex; gap: 8px;">
                    <button onclick="showPurchaseDetails(${app.purchaseId})" style="flex: 1; padding: 8px; background: #f2f2f7; color: #007AFF; border: none; border-radius: 6px; font-size: 12px;">
                        üìã –î–µ—Ç–∞–ª–∏ –∑–∞–∫—É–ø–∫–∏
                    </button>
                    <button onclick="cancelApplication(${app.id})" style="flex: 1; padding: 8px; background: #FF3B30; color: white; border: none; border-radius: 6px; font-size: 12px;">
                        ‚ùå –û—Ç–º–µ–Ω–∏—Ç—å
                    </button>
                </div>
            </div>
        `;
    });
    
    applicationsHTML += '</div>';
    showModal('–ú–æ–∏ –∑–∞—è–≤–∫–∏', applicationsHTML);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ
function getStatusInfo(status) {
    const statuses = {
        'submitted': { text: '–ü–æ–¥–∞–Ω–∞', color: '#007AFF' },
        'reviewing': { text: '–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è', color: '#FF9500' },
        'approved': { text: '–û–¥–æ–±—Ä–µ–Ω–∞', color: '#34C759' },
        'rejected': { text: '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞', color: '#FF3B30' },
        'completed': { text: '–ó–∞–≤–µ—Ä—à–µ–Ω–∞', color: '#8E8E93' }
    };
    
    return statuses[status] || { text: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ', color: '#8E8E93' };
}

// –û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏
function cancelApplication(applicationId) {
    const application = userApplications.find(app => app.id === applicationId);
    if (!application) {
        showNotification('–ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É?')) {
        userApplications = userApplications.filter(app => app.id !== applicationId);
        localStorage.setItem('zakupki_applications', JSON.stringify(userApplications));
        
        showNotification('–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        showMyApplications();
    }
}

// –ü–æ–∫–∞–∑ –ø–æ–º–æ—â–∏
function showHelp() {
    const helpHTML = `
        <div style="padding: 20px;">
            <h3 style="margin-bottom: 20px;">–ü–æ–º–æ—â—å</h3>
            <div style="background: #f8f9fa; padding: 16px; border-radius: 8px; margin-bottom: 16px;">
                <h4 style="margin-bottom: 12px;">–ö–∞–∫ –Ω–∞–π—Ç–∏ –∑–∞–∫—É–ø–∫—É?</h4>
                <ol style="padding-left: 20px; line-height: 1.6;">
                    <li>–ù–∞–∂–º–∏—Ç–µ "–ü–æ–∏—Å–∫ –∑–∞–∫—É–ø–æ–∫"</li>
                    <li>–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞</li>
                    <li>–£–∫–∞–∂–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω –∏ —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω</li>
                    <li>–ù–∞–∂–º–∏—Ç–µ "–ù–∞–π—Ç–∏"</li>
                </ol>
            </div>
            <div style="background: #f8f9fa; padding: 16px; border-radius: 8px;">
                <h4 style="margin-bottom: 12px;">–ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏</h4>
                <p>–¢–µ–ª–µ—Ñ–æ–Ω: 8-800-200-08-31</p>
                <p>Email: support@zakupki.gov.ru</p>
            </div>
        </div>
    `;
    
    showModal('–ü–æ–º–æ—â—å', helpHTML);
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message) {
    const notification = document.createElement('div');
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: #007AFF;
        color: white;
        padding: 12px 20px;
        border-radius: 8px;
        z-index: 10000;
        font-size: 14px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    `;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function showModal(title, content) {
    const modal = document.createElement('div');
    modal.className = 'modal active';
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <h3>${title}</h3>
                <button class="close-btn">‚úï</button>
            </div>
            <div class="modal-body">
                ${content}
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    modal.querySelector('.close-btn').addEventListener('click', () => {
        modal.remove();
    });
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function loadInitialData() {
    setTimeout(() => {
        updateStatusBar();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
        const savedFavorites = localStorage.getItem('zakupki_favorites');
        if (savedFavorites) {
            favorites = JSON.parse(savedFavorites);
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞—è–≤–∫–∏
        const savedApplications = localStorage.getItem('zakupki_applications');
        if (savedApplications) {
            userApplications = JSON.parse(savedApplications);
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞
        const savedSearchHistory = localStorage.getItem('zakupki_search_history');
        if (savedSearchHistory) {
            searchHistory = JSON.parse(savedSearchHistory);
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        const savedNotifications = localStorage.getItem('zakupki_notifications');
        if (savedNotifications) {
            notifications = JSON.parse(savedNotifications);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫—É–ø–æ–∫
        updateRecentPurchases();
    }, 500);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫—É–ø–æ–∫
function updateRecentPurchases() {
    const purchaseList = document.querySelector('.purchase-list');
    if (purchaseList) {
        purchaseList.innerHTML = '';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞–∫—É–ø–∫–∏
        const recentPurchases = mockPurchases.slice(0, 3);
        
        recentPurchases.forEach(purchase => {
            const purchaseItem = createPurchaseItem(purchase);
            purchaseItem.style.marginBottom = '12px';
            purchaseList.appendChild(purchaseItem);
        });
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å –±–∞—Ä–∞
function updateStatusBar() {
    const timeElement = document.querySelector('.time');
    if (timeElement) {
        const now = new Date();
        const timeString = now.toLocaleTimeString('ru-RU', { 
            hour: '2-digit', 
            minute: '2-digit' 
        });
        timeElement.textContent = timeString;
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
function saveFavorites() {
    localStorage.setItem('zakupki_favorites', JSON.stringify(favorites));
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –±–æ—Ç–∞
async function sendBotMessage(chatId, message) {
    try {
        const response = await fetch(`${botApiUrl}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: 'HTML'
            })
        });
        
        const result = await response.json();
        return result.ok;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
        return false;
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function getUserInfo() {
    if (tg && tg.initDataUnsafe && tg.initDataUnsafe.user) {
        return tg.initDataUnsafe.user;
    }
    return null;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ –±–æ—Ç–∞
function sendUserNotification(message) {
    const user = getUserInfo();
    if (user && user.id) {
        sendBotMessage(user.id, `üîî <b>–ì–æ—Å–ó–∞–∫—É–ø–∫–∏</b>\n\n${message}`);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', e.error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–Ω–ª–∞–π–Ω/–æ—Ñ–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
window.addEventListener('online', function() {
    showNotification('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
});

window.addEventListener('offline', function() {
    showNotification('–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º');
});
