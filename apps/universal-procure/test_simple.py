#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ –±–µ–∑ pytest
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, str(Path(__file__).parent))

from parser.ru_nlq import NLQParser

def test_parser():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞")
    print("=" * 60)
    
    parser = NLQParser()
    
    # –¢–µ—Å—Ç 1: –ë—É–º–∞–≥–∞ –ê4 –ú–æ—Å–∫–≤–∞
    print("\nüìù –¢–µ—Å—Ç 1: '–±—É–º–∞–≥–∞ –ê4 –æ—Ñ–∏—Å–Ω–∞—è –ú–æ—Å–∫–≤–∞ –¥–æ 200 —Ç—ã—Å —Ä—É–±'")
    query1 = "–±—É–º–∞–≥–∞ –ê4 –æ—Ñ–∏—Å–Ω–∞—è –ú–æ—Å–∫–≤–∞ –¥–æ 200 —Ç—ã—Å —Ä—É–±"
    result1 = parser.parse(query1)
    
    print(f"   –û–ö–ü–î2: {result1['okpd2']}")
    print(f"   –†–µ–≥–∏–æ–Ω: {result1['region']}")
    print(f"   –¶–µ–Ω–∞ –¥–æ: {result1['price_max']}")
    print(f"   –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: {result1['diagnostics']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    success1 = (
        "17.23.13.110" in result1["okpd2"] and
        "–ì–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞" in result1["region"] and
        result1["price_max"] == 200000
    )
    print(f"   ‚úÖ –£—Å–ø–µ—Ö: {success1}")
    
    # –¢–µ—Å—Ç 2: –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –¥–æ—Ä–æ–≥ –ö—Ä—ã–º
    print("\nüìù –¢–µ—Å—Ç 2: '—É—Å–ª—É–≥–∏ –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤—É –¥–æ—Ä–æ–≥ –ö—Ä—ã–º –æ—Ç 5 –¥–æ 20 –º–ª–Ω'")
    query2 = "—É—Å–ª—É–≥–∏ –ø–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤—É –¥–æ—Ä–æ–≥ –ö—Ä—ã–º –æ—Ç 5 –¥–æ 20 –º–ª–Ω"
    result2 = parser.parse(query2)
    
    print(f"   –û–ö–ü–î2: {result2['okpd2']}")
    print(f"   –†–µ–≥–∏–æ–Ω: {result2['region']}")
    print(f"   –¶–µ–Ω–∞ –æ—Ç: {result2['price_min']}")
    print(f"   –¶–µ–Ω–∞ –¥–æ: {result2['price_max']}")
    print(f"   –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: {result2['diagnostics']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    success2 = (
        "42.11.*" in result2["okpd2"] and
        "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö—Ä—ã–º" in result2["region"] and
        result2["price_min"] == 5000000 and
        result2["price_max"] == 20000000
    )
    print(f"   ‚úÖ –£—Å–ø–µ—Ö: {success2}")
    
    # –¢–µ—Å—Ç 3: –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –ú–æ—Å–∫–≤–∞ –∫–æ–Ω–∫—É—Ä—Å
    print("\nüìù –¢–µ—Å—Ç 3: '–ø–æ—Å—Ç–∞–≤–∫–∞ –º–µ–¥–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ú–æ—Å–∫–≤–∞ –∫–æ–Ω–∫—É—Ä—Å'")
    query3 = "–ø–æ—Å—Ç–∞–≤–∫–∞ –º–µ–¥–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ú–æ—Å–∫–≤–∞ –∫–æ–Ω–∫—É—Ä—Å"
    result3 = parser.parse(query3)
    
    print(f"   –û–ö–ü–î2: {result3['okpd2']}")
    print(f"   –†–µ–≥–∏–æ–Ω: {result3['region']}")
    print(f"   –ú–µ—Ç–æ–¥: {result3['method']}")
    print(f"   –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: {result3['diagnostics']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    success3 = (
        "26.60.*" in result3["okpd2"] and
        "–ì–æ—Ä–æ–¥ –ú–æ—Å–∫–≤–∞" in result3["region"] and
        "–∫–æ–Ω–∫—É—Ä—Å" in result3["method"]
    )
    print(f"   ‚úÖ –£—Å–ø–µ—Ö: {success3}")
    
    # –¢–µ—Å—Ç 4: –≠–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–∞–∂ –°–ü–± –Ω–æ–≤—ã–µ –∑–∞ –Ω–µ–¥–µ–ª—é
    print("\nüìù –¢–µ—Å—Ç 4: '—ç–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –¥–æ 3 –º–ª–Ω —Ä—É–± –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ –Ω–æ–≤—ã–µ –∑–∞ –Ω–µ–¥–µ–ª—é'")
    query4 = "—ç–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –¥–æ 3 –º–ª–Ω —Ä—É–± –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ –Ω–æ–≤—ã–µ –∑–∞ –Ω–µ–¥–µ–ª—é"
    result4 = parser.parse(query4)
    
    print(f"   –û–ö–ü–î2: {result4['okpd2']}")
    print(f"   –†–µ–≥–∏–æ–Ω: {result4['region']}")
    print(f"   –¶–µ–Ω–∞ –¥–æ: {result4['price_max']}")
    print(f"   –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Å: {result4['publish_date_from']}")
    print(f"   –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: {result4['diagnostics']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    success4 = (
        "43.21.*" in result4["okpd2"] and
        "–ì–æ—Ä–æ–¥ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥" in result4["region"] and
        result4["price_max"] == 3000000 and
        result4["publish_date_from"] is not None
    )
    print(f"   ‚úÖ –£—Å–ø–µ—Ö: {success4}")
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 60)
    print("üìä –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   –¢–µ—Å—Ç 1: {'‚úÖ –ü–†–û–ô–î–ï–ù' if success1 else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    print(f"   –¢–µ—Å—Ç 2: {'‚úÖ –ü–†–û–ô–î–ï–ù' if success2 else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    print(f"   –¢–µ—Å—Ç 3: {'‚úÖ –ü–†–û–ô–î–ï–ù' if success3 else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    print(f"   –¢–µ—Å—Ç 4: {'‚úÖ –ü–†–û–ô–î–ï–ù' if success4 else '‚ùå –ü–†–û–í–ê–õ–ï–ù'}")
    
    total_success = sum([success1, success2, success3, success4])
    print(f"\nüéØ –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {total_success}/4 —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if total_success == 4:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.")

if __name__ == "__main__":
    test_parser()
