#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ Telegram Mini App –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
"""

import os
import requests
import json
import base64
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
GITHUB_USERNAME = "shabunin24"
REPO_NAME = "zakupki"
BRANCH = "main"

# –§–∞–π–ª—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
FILES_TO_UPLOAD = [
    "index.html",
    "styles.css", 
    "script.js",
    "config.js",
    "README.md",
    "QUICKSTART.md",
    "package.json",
    "start-server.py",
    "test.html",
    ".gitignore"
]

def create_github_token():
    """–°–æ–∑–¥–∞–Ω–∏–µ GitHub —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
    print("üîê –î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ GitHub –Ω—É–∂–µ–Ω Personal Access Token")
    print("üìù –°–æ–∑–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω –ø–æ —Å—Å—ã–ª–∫–µ:")
    print(f"https://github.com/settings/tokens/new?description=Zakupki%20Bot&scopes=repo")
    print()
    print("‚úÖ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∞ 'repo' (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º)")
    print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∏–∂–µ:")
    
    token = input("üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à GitHub —Ç–æ–∫–µ–Ω: ").strip()
    return token

def upload_file_to_github(token, file_path, content, message):
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ GitHub —á–µ—Ä–µ–∑ API"""
    url = f"https://api.github.com/repos/{GITHUB_USERNAME}/{REPO_NAME}/contents/{file_path}"
    
    headers = {
        "Authorization": f"token {token}",
        "Accept": "application/vnd.github.v3+json"
    }
    
    data = {
        "message": message,
        "content": base64.b64encode(content.encode('utf-8')).decode('utf-8'),
        "branch": BRANCH
    }
    
    try:
        response = requests.put(url, headers=headers, json=data)
        if response.status_code in [200, 201]:
            print(f"‚úÖ {file_path} - –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå {file_path} - –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå {file_path} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def main():
    print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ Telegram Mini App –≤ GitHub")
    print(f"üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {GITHUB_USERNAME}/{REPO_NAME}")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token = create_github_token()
    if not token:
        print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥–µ–Ω. –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return
    
    print()
    print("üì§ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤...")
    print()
    
    success_count = 0
    total_files = len(FILES_TO_UPLOAD)
    
    for filename in FILES_TO_UPLOAD:
        if os.path.exists(filename):
            try:
                with open(filename, 'r', encoding='utf-8') as f:
                    content = f.read()
                
                message = f"üöÄ –î–æ–±–∞–≤–ª–µ–Ω {filename} - Telegram Mini App –ì–æ—Å–ó–∞–∫—É–ø–∫–∏"
                
                if upload_file_to_github(token, filename, content, message):
                    success_count += 1
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {filename}: {e}")
        else:
            print(f"‚ö†Ô∏è  –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print()
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {success_count}/{total_files}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {total_files - success_count}")
    
    if success_count > 0:
        print()
        print("üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üåê –í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:")
        print(f"   https://github.com/{GITHUB_USERNAME}/{REPO_NAME}")
        print()
        print("üì± –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –í–∫–ª—é—á–∏—Ç–µ GitHub Pages –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è")
        print("2. –ü–æ–ª—É—á–∏—Ç–µ HTTPS URL –¥–ª—è Mini App")
        print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather")
    else:
        print()
        print("‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.")

if __name__ == "__main__":
    main()
