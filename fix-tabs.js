// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
function switchTab(tab) {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –≤–∫–ª–∞–¥–æ–∫
    document.querySelectorAll('.nav-item').forEach(item => {
        item.classList.remove('active');
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ
    const activeTab = document.querySelector(`[data-tab="${tab}"]`);
    if (activeTab) {
        activeTab.classList.add('active');
    }

    currentTab = tab;
    showTabContent(tab);
}

// –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∫–ª–∞–¥–∫–∏
function showTabContent(tab) {
    hideAllSections();
    
    switch(tab) {
        case 'home':
            showHomeContent();
            break;
        case 'search':
            showSearchContent();
            break;
        case 'favorites':
            showFavoritesContent();
            break;
        case 'profile':
            showProfileContent();
            break;
        default:
            console.log('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞:', tab);
            showHomeContent();
    }
}

// –°–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö —Å–µ–∫—Ü–∏–π
function hideAllSections() {
    const sections = [
        'main-menu', 'quick-actions', 'recent-purchases',
        'search-content', 'favorites-content', 'profile-content'
    ];
    
    sections.forEach(section => {
        const element = document.querySelector(`.${section}`);
        if (element) {
            element.style.display = 'none';
        }
    });
}

// –ü–æ–∫–∞–∑ –¥–æ–º–∞—à–Ω–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
function showHomeContent() {
    const mainMenu = document.querySelector('.main-menu');
    const quickActions = document.querySelector('.quick-actions');
    const recentPurchases = document.querySelector('.recent-purchases');
    
    if (mainMenu) mainMenu.style.display = 'grid';
    if (quickActions) quickActions.style.display = 'block';
    if (recentPurchases) recentPurchases.style.display = 'block';
    
    console.log('–ü–æ–∫–∞–∑–∞–Ω –¥–æ–º–∞—à–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç');
}

// –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–∏—Å–∫–∞
function showSearchContent() {
    if (!document.querySelector('.search-content')) {
        createSearchContent();
    }
    
    const searchContent = document.querySelector('.search-content');
    if (searchContent) {
        searchContent.style.display = 'block';
    }
    
    console.log('–ü–æ–∫–∞–∑–∞–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–∏—Å–∫–∞');
}

// –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
function showFavoritesContent() {
    if (!document.querySelector('.favorites-content')) {
        createFavoritesContent();
    }
    
    const favoritesContent = document.querySelector('.favorites-content');
    if (favoritesContent) {
        favoritesContent.style.display = 'block';
    }
    
    console.log('–ü–æ–∫–∞–∑–∞–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
}

// –ü–æ–∫–∞–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è
function showProfileContent() {
    if (!document.querySelector('.profile-content')) {
        createProfileContent();
    }
    
    const profileContent = document.querySelector('.profile-content');
    if (profileContent) {
        profileContent.style.display = 'block';
    }
    
    console.log('–ü–æ–∫–∞–∑–∞–Ω –∫–æ–Ω—Ç–µ–Ω—Ç –ø—Ä–æ—Ñ–∏–ª—è');
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø–æ–∏—Å–∫–∞
function createSearchContent() {
    const mainContainer = document.querySelector('.main-container');
    if (!mainContainer) return;
    
    const searchContent = document.createElement('div');
    searchContent.className = 'search-content';
    searchContent.innerHTML = `
        <div class="search-header">
            <h2>üîç –ü–æ–∏—Å–∫ –∑–∞–∫—É–ø–æ–∫</h2>
            <p>–ù–∞–π–¥–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º</p>
        </div>
        
        <div class="search-form">
            <input type="text" id="searchInput" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–∫—É–ø–∫–∏, –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ —Ä–µ–≥–∏–æ–Ω...">
            <button onclick="performSearch()">–ù–∞–π—Ç–∏</button>
        </div>
        
        <div class="search-filters">
            <select id="categoryFilter">
                <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                <option value="–¢–æ–≤–∞—Ä—ã">–¢–æ–≤–∞—Ä—ã</option>
                <option value="–£—Å–ª—É–≥–∏">–£—Å–ª—É–≥–∏</option>
                <option value="–†–∞–±–æ—Ç—ã">–†–∞–±–æ—Ç—ã</option>
            </select>
            
            <select id="regionFilter">
                <option value="">–í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã</option>
                <option value="–ú–æ—Å–∫–≤–∞">–ú–æ—Å–∫–≤–∞</option>
                <option value="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥">–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</option>
                <option value="–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫">–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫</option>
                <option value="–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä">–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä</option>
                <option value="–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥">–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥</option>
            </select>
            
            <select id="statusFilter">
                <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ</option>
            </select>
        </div>
        
        <div id="searchResults" class="search-results"></div>
    `;
    
    mainContainer.appendChild(searchContent);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
function createFavoritesContent() {
    const mainContainer = document.querySelector('.main-container');
    if (!mainContainer) return;
    
    const favoritesContent = document.createElement('div');
    favoritesContent.className = 'favorites-content';
    favoritesContent.innerHTML = `
        <div class="favorites-header">
            <h2>‚≠ê –ò–∑–±—Ä–∞–Ω–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏</h2>
            <p>–í–∞—à–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∑–∞–∫—É–ø–∫–∏</p>
        </div>
        
        <div id="favoritesList" class="favorites-list">
            ${favorites.length === 0 ? '<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫</p>' : ''}
        </div>
    `;
    
    mainContainer.appendChild(favoritesContent);
    updateFavoritesList();
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è
function createProfileContent() {
    const mainContainer = document.querySelector('.main-container');
    if (!mainContainer) return;
    
    const profileContent = document.createElement('div');
    profileContent.className = 'profile-content';
    profileContent.innerHTML = `
        <div class="profile-header">
            <h2>üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h2>
        </div>
        
        <div class="profile-info">
            <div class="profile-section">
                <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                <p>–ò–∑–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫: ${favorites.length}</p>
                <p>–ü–æ–¥–∞–Ω–æ –∑–∞—è–≤–æ–∫: ${userApplications.length}</p>
                <p>–ü–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: ${searchHistory.length}</p>
            </div>
            
            <div class="profile-section">
                <h3>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                <div id="notificationsList">
                    ${notifications.length === 0 ? '<p>–ù–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ—Ç</p>' : ''}
                </div>
            </div>
            
            <div class="profile-section">
                <h3>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
                <button onclick="clearAllData()">–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ</button>
                <button onclick="exportData()">–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö</button>
            </div>
        </div>
    `;
    
    mainContainer.appendChild(profileContent);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
function updateFavoritesList() {
    const favoritesList = document.getElementById('favoritesList');
    if (!favoritesList) return;
    
    if (favorites.length === 0) {
        favoritesList.innerHTML = '<p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∑–∞–∫—É–ø–æ–∫</p>';
        return;
    }
    
    let html = '';
    favorites.forEach(favoriteId => {
        const purchase = mockPurchases.find(p => p.id === favoriteId);
        if (purchase) {
            html += `
                <div class="favorite-item">
                    <h4>${purchase.title}</h4>
                    <p>${purchase.category} ‚Ä¢ ${purchase.region}</p>
                    <p>–¶–µ–Ω–∞: ${purchase.price.toLocaleString()} ‚ÇΩ</p>
                    <button onclick="removeFromFavorites(${purchase.id})">–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ</button>
                </div>
            `;
        }
    });
    
    favoritesList.innerHTML = html;
}

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
function performSearch() {
    const query = document.getElementById('searchInput').value.trim();
    const category = document.getElementById('categoryFilter').value;
    const region = document.getElementById('regionFilter').value;
    const status = document.getElementById('statusFilter').value;
    
    if (!query && !category && !region && !status) {
        alert('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã');
        return;
    }
    
    const filters = {};
    if (category) filters.category = category;
    if (region) filters.region = region;
    if (status) filters.status = status;
    
    const results = searchPurchases(query, filters);
    displaySearchResults(results, query, filters);
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
function displaySearchResults(results, query, filters) {
    const resultsContainer = document.getElementById('searchResults');
    if (!resultsContainer) return;
    
    if (results.length === 0) {
        resultsContainer.innerHTML = `
            <div class="no-results">
                <h3>–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
            </div>
        `;
        return;
    }
    
    let html = `<h3>–ù–∞–π–¥–µ–Ω–æ ${results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>`;
    
    results.forEach(purchase => {
        html += `
            <div class="search-result-item">
                <h4>${purchase.title}</h4>
                <p>${purchase.category} ‚Ä¢ ${purchase.region}</p>
                <p>–¶–µ–Ω–∞: ${purchase.price.toLocaleString()} ‚ÇΩ</p>
                <p>–°—Ç–∞—Ç—É—Å: ${purchase.status === 'active' ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ó–∞–≤–µ—Ä—à–µ–Ω–∞'}</p>
                <div class="result-actions">
                    <button onclick="addToFavorites(${purchase.id})">‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</button>
                    <button onclick="submitApplication(${purchase.id})">üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É</button>
                </div>
            </div>
        `;
    });
    
    resultsContainer.innerHTML = html;
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
function addToFavorites(purchaseId) {
    if (!favorites.includes(purchaseId)) {
        favorites.push(purchaseId);
        localStorage.setItem('zakupkiFavorites', JSON.stringify(favorites));
        updateFavoritesList();
        alert('–ó–∞–∫—É–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!');
    } else {
        alert('–ó–∞–∫—É–ø–∫–∞ —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º!');
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
function removeFromFavorites(purchaseId) {
    const index = favorites.indexOf(purchaseId);
    if (index > -1) {
        favorites.splice(index, 1);
        localStorage.setItem('zakupkiFavorites', JSON.stringify(favorites));
        updateFavoritesList();
        alert('–ó–∞–∫—É–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ!');
    }
}

// –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–∫–∏
function submitApplication(purchaseId) {
    if (!userApplications.includes(purchaseId)) {
        userApplications.push(purchaseId);
        localStorage.setItem('zakupkiApplications', JSON.stringify(userApplications));
        alert('–ó–∞—è–≤–∫–∞ –ø–æ–¥–∞–Ω–∞!');
    } else {
        alert('–ó–∞—è–≤–∫–∞ —É–∂–µ –ø–æ–¥–∞–Ω–∞!');
    }
}

// –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
function clearAllData() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ?')) {
        favorites = [];
        userApplications = [];
        searchHistory = [];
        notifications = [];
        
        localStorage.removeItem('zakupkiFavorites');
        localStorage.removeItem('zakupkiApplications');
        localStorage.removeItem('zakupkiSearchHistory');
        localStorage.removeItem('zakupkiNotifications');
        
        alert('–í—Å–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã!');
        location.reload();
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
function exportData() {
    const data = {
        favorites,
        userApplications,
        searchHistory,
        notifications,
        exportDate: new Date().toISOString()
    };
    
    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'zakupki-data.json';
    a.click();
    URL.revokeObjectURL(url);
}
