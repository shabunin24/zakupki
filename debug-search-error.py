#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞ –ø–æ —Å–ª–æ–≤—É "–∫—Ä–∞—Å–∫–∞"
"""

import requests
import json

def debug_search_error():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞ –ø–æ —Å–ª–æ–≤—É '–∫—Ä–∞—Å–∫–∞'")
    print("=" * 60)
    
    base_url = "https://shabunin24.github.io/zakupki"
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–∫—É–ø–∫–∏ —Å "–∫—Ä–∞—Å–∫–∞"
    print("\nüìä –¢–µ—Å—Ç 1: –ü–æ–∏—Å–∫ –∑–∞–∫—É–ø–æ–∫ —Å '–∫—Ä–∞—Å–∫–∞'")
    
    try:
        response = requests.get(f"{base_url}/script.js", timeout=10)
        if response.status_code == 200:
            content = response.text
            
            # –ò—â–µ–º –∑–∞–∫—É–ø–∫–∏ —Å –∫—Ä–∞—Å–∫–æ–π
            if '–∫—Ä–∞—Å–∫–∞' in content.lower():
                print("   ‚úÖ –°–ª–æ–≤–æ '–∫—Ä–∞—Å–∫–∞' –Ω–∞–π–¥–µ–Ω–æ –≤ –¥–∞–Ω–Ω—ã—Ö")
                
                # –ò—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
                lines = content.split('\n')
                for i, line in enumerate(lines):
                    if '–∫—Ä–∞—Å–∫–∞' in line.lower():
                        print(f"   üìç –°—Ç—Ä–æ–∫–∞ {i+1}: {line.strip()[:100]}...")
            else:
                print("   ‚ùå –°–ª–æ–≤–æ '–∫—Ä–∞—Å–∫–∞' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –¥–∞–Ω–Ω—ã—Ö")
                
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å script.js: –∫–æ–¥ {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞
    print("\n‚öôÔ∏è –¢–µ—Å—Ç 2: –ê–Ω–∞–ª–∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞")
    
    try:
        response = requests.get(f"{base_url}/script.js", timeout=10)
        if response.status_code == 200:
            content = response.text
            
            # –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é searchPurchases
            search_func_start = content.find('function searchPurchases')
            if search_func_start != -1:
                # –ò—â–µ–º –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏ (–ø—Ä–∏–º–µ—Ä–Ω–æ)
                search_func_end = content.find('}', search_func_start)
                if search_func_end != -1:
                    search_func = content[search_func_start:search_func_end + 100]
                    print("   ‚úÖ –§—É–Ω–∫—Ü–∏—è searchPurchases –Ω–∞–π–¥–µ–Ω–∞")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
                    if 'mockPurchases.forEach' in search_func:
                        print("   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç mockPurchases.forEach")
                    else:
                        print("   ‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç mockPurchases.forEach")
                        
                    if 'toLowerCase()' in search_func:
                        print("   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç toLowerCase() –¥–ª—è –ø–æ–∏—Å–∫–∞")
                    else:
                        print("   ‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç toLowerCase()")
                        
                    if 'includes(' in search_func:
                        print("   ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç includes() –¥–ª—è –ø–æ–∏—Å–∫–∞")
                    else:
                        print("   ‚ùå –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç includes()")
                        
                else:
                    print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏")
            else:
                print("   ‚ùå –§—É–Ω–∫—Ü–∏—è searchPurchases –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å script.js: –∫–æ–¥ {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ—É–Ω–∫—Ü–∏–∏: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ mockPurchases
    print("\nüìã –¢–µ—Å—Ç 3: –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö mockPurchases")
    
    try:
        response = requests.get(f"{base_url}/script.js", timeout=10)
        if response.status_code == 200:
            content = response.text
            
            # –ò—â–µ–º –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞
            start_marker = "const mockPurchases = ["
            start_pos = content.find(start_marker)
            
            if start_pos != -1:
                # –ò—â–µ–º –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞
                end_pos = content.find("];", start_pos)
                if end_pos != -1:
                    purchases_data = content[start_pos:end_pos + 2]
                    
                    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–∫—É–ø–∫–∏
                    purchase_count = purchases_data.count('id:')
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫—É–ø–æ–∫: {purchase_count}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∑–∞–∫—É–ø–∫—É –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º
                    lines = purchases_data.split('\n')
                    for i, line in enumerate(lines):
                        if 'id:' in line:
                            # –ò—â–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ —Å—Ç—Ä–æ–∫–µ
                            if 'undefined' in line:
                                print(f"   ‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {i+1}: —Å–æ–¥–µ—Ä–∂–∏—Ç 'undefined'")
                            if 'null' in line:
                                print(f"   ‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {i+1}: —Å–æ–¥–µ—Ä–∂–∏—Ç 'null'")
                            if 'NaN' in line:
                                print(f"   ‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {i+1}: —Å–æ–¥–µ—Ä–∂–∏—Ç 'NaN'")
                                
                else:
                    print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞")
            else:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–∞—Å—Å–∏–≤ mockPurchases")
                
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å script.js: –∫–æ–¥ {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    print("\nüß™ –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
    
    try:
        response = requests.get(f"{base_url}/simple-test.html", timeout=10)
        if response.status_code == 200:
            content = response.text
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—à–∏–±–æ–∫
            if 'try {' in content and 'catch' in content:
                print("   ‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
            else:
                print("   ‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
                
            if 'console.error' in content:
                print("   ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            else:
                print("   ‚ùå –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
                
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: –∫–æ–¥ {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
    
    # –¢–µ—Å—Ç 5: –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫
    print("\nüîç –¢–µ—Å—Ç 5: –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫")
    
    try:
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É "–∫—Ä–∞—Å–∫–∞"
        test_data = [
            {"id": 1, "title": "–ü–æ—Å—Ç–∞–≤–∫–∞ –∫—Ä–∞—Å–æ–∫", "category": "–¢–æ–≤–∞—Ä—ã", "region": "–ú–æ—Å–∫–≤–∞"},
            {"id": 2, "title": "–£—Å–ª—É–≥–∏ –ø–æ –ø–æ–∫—Ä–∞—Å–∫–µ", "category": "–£—Å–ª—É–≥–∏", "region": "–°–ü–±"},
            {"id": 3, "title": "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã", "category": "–†–∞–±–æ—Ç—ã", "region": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"}
        ]
        
        # –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫
        results = []
        search_term = "–∫—Ä–∞—Å–∫–∞"
        
        for item in test_data:
            if (search_term.lower() in item["title"].lower() or 
                search_term.lower() in item["category"].lower() or
                search_term.lower() in item["region"].lower()):
                results.append(item)
        
        print(f"   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫: –Ω–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
        
        if results:
            for item in results:
                print(f"      - {item['title']} ({item['category']}, {item['region']})")
        else:
            print("      - –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")
    
    print("\n" + "=" * 60)
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)")
    print("2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–∫—Ä–∞—Å–∫–∞'")
    print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ –∑–∞–∫—É–ø–∫–∏ —Å –∫—Ä–∞—Å–∫–æ–π –≤ –¥–∞–Ω–Ω—ã—Ö")
    print("5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è searchPurchases –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—É—Å—Ç—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")

if __name__ == "__main__":
    debug_search_error()
