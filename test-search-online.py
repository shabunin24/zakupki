#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –Ω–∞ GitHub Pages
"""

import requests
import time
import json

def test_search_functionality():
    """–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –ø–æ–∏—Å–∫–∞ –Ω–∞ GitHub Pages"""
    print("üîç –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –Ω–∞ GitHub Pages")
    print("=" * 50)
    
    base_url = "https://shabunin24.github.io/zakupki"
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    print("\nüìÅ –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤")
    
    files_to_test = [
        ('script.js', 'JavaScript —Ñ—É–Ω–∫—Ü–∏–∏'),
        ('config.js', '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è'),
        ('simple-test.html', '–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞')
    ]
    
    for filename, description in files_to_test:
        try:
            response = requests.get(f"{base_url}/{filename}", timeout=10)
            if response.status_code == 200:
                print(f"   ‚úÖ {description}: –∑–∞–≥—Ä—É–∂–µ–Ω")
            else:
                print(f"   ‚ùå {description}: –∫–æ–¥ {response.status_code}")
        except Exception as e:
            print(f"   ‚ùå {description}: –æ—à–∏–±–∫–∞ {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    print("\n‚öôÔ∏è –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π")
    
    try:
        response = requests.get(f"{base_url}/script.js", timeout=10)
        if response.status_code == 200:
            content = response.text
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
            functions_to_check = [
                ('searchPurchases', '–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞'),
                ('mockPurchases', '–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ'),
                ('performAdvancedSearch', '–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫'),
                ('getCurrentFilters', '–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤')
            ]
            
            for func_name, description in functions_to_check:
                if func_name in content:
                    print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–∞")
                else:
                    print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å script.js: –∫–æ–¥ {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    print("\nüìä –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    try:
        response = requests.get(f"{base_url}/script.js", timeout=10)
        if response.status_code == 200:
            content = response.text
            
            # –ò—â–µ–º –Ω–∞—á–∞–ª–æ –º–∞—Å—Å–∏–≤–∞ mockPurchases
            start_marker = "const mockPurchases = ["
            end_marker = "];"
            
            start_pos = content.find(start_marker)
            if start_pos != -1:
                # –ò—â–µ–º –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞
                end_pos = content.find(end_marker, start_pos)
                if end_pos != -1:
                    purchases_data = content[start_pos:end_pos + 2]
                    
                    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—É–ø–æ–∫
                    purchase_count = purchases_data.count('id:')
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫—É–ø–æ–∫: {purchase_count}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
                    has_title = 'title:' in purchases_data
                    has_price = 'price:' in purchases_data
                    has_category = 'category:' in purchases_data
                    has_region = 'region:' in purchases_data
                    
                    print(f"   ‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏: {'–¥–∞' if has_title else '–Ω–µ—Ç'}")
                    print(f"   ‚úÖ –¶–µ–Ω—ã: {'–¥–∞' if has_price else '–Ω–µ—Ç'}")
                    print(f"   ‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {'–¥–∞' if has_category else '–Ω–µ—Ç'}")
                    print(f"   ‚úÖ –†–µ–≥–∏–æ–Ω—ã: {'–¥–∞' if has_region else '–Ω–µ—Ç'}")
                    
                else:
                    print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ –¥–∞–Ω–Ω—ã—Ö")
            else:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–∞—Å—Å–∏–≤ mockPurchases")
                
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å script.js: –∫–æ–¥ {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("\nüß™ –¢–µ—Å—Ç 4: –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞")
    
    try:
        response = requests.get(f"{base_url}/simple-test.html", timeout=10)
        if response.status_code == 200:
            content = response.text
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            elements_to_check = [
                ('–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –ì–æ—Å–ó–∞–∫—É–ø–∫–∏', '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã'),
                ('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö', '–ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö'),
                ('–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫', '–ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞'),
                ('–ü–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏', '–ö–Ω–æ–ø–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞'),
                ('–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã', '–ö–Ω–æ–ø–∫–∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞')
            ]
            
            for element_text, description in elements_to_check:
                if element_text in content:
                    print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω")
                else:
                    print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ JavaScript —Ñ—É–Ω–∫—Ü–∏–π
            js_functions = [
                ('checkData', '–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞–Ω–Ω—ã—Ö'),
                ('performSearch', '–§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞'),
                ('performFilteredSearch', '–§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞'),
                ('runComprehensiveTest', '–§—É–Ω–∫—Ü–∏—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞')
            ]
            
            for func_name, description in js_functions:
                if func_name in content:
                    print(f"   ‚úÖ {description}: –Ω–∞–π–¥–µ–Ω–∞")
                else:
                    print(f"   ‚ùå {description}: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                    
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: –∫–æ–¥ {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    print("\n‚ö° –¢–µ—Å—Ç 5: –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
    
    try:
        start_time = time.time()
        response = requests.get(f"{base_url}/simple-test.html", timeout=15)
        end_time = time.time()
        
        if response.status_code == 200:
            load_time = (end_time - start_time) * 1000
            print(f"   ‚úÖ –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏: {load_time:.0f}ms")
            
            if load_time < 1000:
                print("   üìä –û—Ü–µ–Ω–∫–∞: –û—Ç–ª–∏—á–Ω–æ")
            elif load_time < 2000:
                print("   üìä –û—Ü–µ–Ω–∫–∞: –•–æ—Ä–æ—à–æ")
            elif load_time < 5000:
                print("   üìä –û—Ü–µ–Ω–∫–∞: –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ")
            else:
                print("   üìä –û—Ü–µ–Ω–∫–∞: –ú–µ–¥–ª–µ–Ω–Ω–æ")
        else:
            print(f"   ‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å: –∫–æ–¥ {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ https://shabunin24.github.io/zakupki/simple-test.html")
    print("2. –ù–∞–∂–º–∏—Ç–µ '–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã'")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –Ω–∞ –æ—à–∏–±–∫–∏")
    print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É '–∫–æ–º–ø—å—é—Ç–µ—Ä'")

if __name__ == "__main__":
    test_search_functionality()
