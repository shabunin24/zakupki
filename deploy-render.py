#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞ –Ω–∞ Render.com
"""

import requests
import json
import os
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "8203311811:AAEbVoeZ0inIO7CUFuGUbwNRdoL2xfpxfPw"
RENDER_API_KEY = "your_render_api_key"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à API –∫–ª—é—á

def create_render_service():
    """–°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–≤–∏—Å –Ω–∞ Render.com"""
    
    headers = {
        "Authorization": f"Bearer {RENDER_API_KEY}",
        "Content-Type": "application/json"
    }
    
    service_data = {
        "name": "telegram-bot-goszakupki",
        "type": "web_service",
        "env": "python",
        "region": "oregon",
        "plan": "free",
        "buildCommand": "pip install -r requirements.txt",
        "startCommand": "python telegram-webhook.py",
        "healthCheckPath": "/health",
        "autoDeploy": "yes"
    }
    
    try:
        response = requests.post(
            "https://api.render.com/v1/services",
            headers=headers,
            json=service_data
        )
        
        if response.status_code == 201:
            service = response.json()
            print(f"‚úÖ –°–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω: {service['service']['url']}")
            return service['service']['url']
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞: {response.status_code}")
            print(response.text)
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def set_webhook(webhook_url):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç webhook –¥–ª—è –±–æ—Ç–∞"""
    
    webhook_data = {
        "url": f"{webhook_url}/webhook",
        "allowed_updates": ["message", "callback_query"]
    }
    
    try:
        response = requests.post(
            f"https://api.telegram.org/bot{BOT_TOKEN}/setWebhook",
            json=webhook_data
        )
        
        result = response.json()
        if result.get("ok"):
            print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_data['url']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def check_webhook():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π webhook"""
    
    try:
        response = requests.get(f"https://api.telegram.org/bot{BOT_TOKEN}/getWebhookInfo")
        result = response.json()
        
        if result.get("ok"):
            webhook_info = result["result"]
            if webhook_info.get("url"):
                print(f"‚úÖ Webhook –∞–∫—Ç–∏–≤–µ–Ω: {webhook_info['url']}")
                return webhook_info['url']
            else:
                print("‚ùå Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {result}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞ –Ω–∞ Render.com")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook...")
    current_webhook = check_webhook()
    
    if current_webhook:
        print(f"üì± –ë–æ—Ç —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {current_webhook}")
        return
    
    # –ï—Å–ª–∏ –Ω–µ—Ç API –∫–ª—é—á–∞ Render, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    if RENDER_API_KEY == "your_render_api_key":
        print("\nüìã –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:")
        print("1. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ https://render.com/docs/api")
        print("2. –ó–∞–º–µ–Ω–∏—Ç–µ 'your_render_api_key' –≤ —Å–∫—Ä–∏–ø—Ç–µ")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        
        print("\nüîß –†—É—á–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://render.com")
        print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π Web Service")
        print("3. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π")
        print("4. –£–∫–∞–∂–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∑–∞–ø—É—Å–∫–∞: python telegram-webhook.py")
        print("5. –ü–æ—Å–ª–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ webhook:")
        
        print("\nüìù –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:")
        print("curl -X POST 'https://api.telegram.org/bot{BOT_TOKEN}/setWebhook' \\")
        print("  -H 'Content-Type: application/json' \\")
        print("  -d '{\"url\": \"https://your-service.onrender.com/webhook\"}'")
        
        return
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –Ω–∞ Render
    print("\nüèóÔ∏è –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –Ω–∞ Render.com...")
    service_url = create_render_service()
    
    if not service_url:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å")
        return
    
    # –ñ–¥–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    print("\n‚è≥ –ñ–¥–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞...")
    time.sleep(30)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    print("\nüîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook...")
    if set_webhook(service_url):
        print("\nüéâ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print(f"üì± URL —Å–µ—Ä–≤–∏—Å–∞: {service_url}")
        print(f"üîó Webhook: {service_url}/webhook")
        print("\n‚úÖ –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –≤–∞—à–µ–º—É –±–æ—Ç—É @oborotn_bot")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook")

if __name__ == "__main__":
    main()
