#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ GitHub Pages –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
GITHUB_USERNAME = "shabunin24"
REPO_NAME = "zakupki"
TOKEN = "YOUR_GITHUB_TOKEN_HERE"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

def enable_github_pages():
    """–í–∫–ª—é—á–µ–Ω–∏–µ GitHub Pages"""
    url = f"https://api.github.com/repos/{GITHUB_USERNAME}/{REPO_NAME}/pages"
    
    headers = {
        "Authorization": f"token {TOKEN}",
        "Accept": "application/vnd.github.v3+json"
    }
    
    data = {
        "source": {
            "branch": "main",
            "path": "/"
        }
    }
    
    try:
        print("üîß –í–∫–ª—é—á–∞–µ–º GitHub Pages...")
        response = requests.post(url, headers=headers, json=data)
        
        if response.status_code == 201:
            print("‚úÖ GitHub Pages —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω!")
            print("üì± URL –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç:")
            print(f"   https://{GITHUB_USERNAME}.github.io/{REPO_NAME}/")
            return True
        elif response.status_code == 409:
            print("‚ö†Ô∏è  GitHub Pages —É–∂–µ –≤–∫–ª—é—á–µ–Ω –∏–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def check_pages_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ GitHub Pages"""
    url = f"https://api.github.com/repos/{GITHUB_USERNAME}/{REPO_NAME}/pages"
    
    headers = {
        "Authorization": f"token {TOKEN}",
        "Accept": "application/vnd.github.v3+json"
    }
    
    try:
        response = requests.get(url, headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            print("üìä –°—Ç–∞—Ç—É—Å GitHub Pages:")
            print(f"   URL: {data.get('url', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
            print(f"   –°—Ç–∞—Ç—É—Å: {data.get('status', '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')}")
            print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {data.get('source', {}).get('branch', '–ù–µ —É–∫–∞–∑–∞–Ω')}")
            return data
        else:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return None

def main():
    print("üöÄ –ê–∫—Ç–∏–≤–∞—Ü–∏—è GitHub Pages –¥–ª—è Telegram Mini App")
    print(f"üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {GITHUB_USERNAME}/{REPO_NAME}")
    print()
    
    # –í–∫–ª—é—á–∞–µ–º GitHub Pages
    if enable_github_pages():
        print()
        print("‚è≥ –ñ–¥–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        import time
        time.sleep(5)
        
        print()
        check_pages_status()
        
        print()
        print("üì± –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 5-10 –º–∏–Ω—É—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ URL –≤—ã—à–µ")
        print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Mini App —á–µ—Ä–µ–∑ @BotFather")
        print("4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å GitHub Pages")

if __name__ == "__main__":
    main()
