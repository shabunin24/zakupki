version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15
    container_name: zakupki_postgres
    environment:
      POSTGRES_DB: zakupki_db
      POSTGRES_USER: zakupki_user
      POSTGRES_PASSWORD: zakupki_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - zakupki_network
    restart: unless-stopped

  # Redis для кэширования и очередей
  redis:
    image: redis:7-alpine
    container_name: zakupki_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zakupki_network
    restart: unless-stopped

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: zakupki_backend
    environment:
      - DATABASE_URL=postgresql://zakupki_user:zakupki_password@postgres:5432/zakupki_db
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - zakupki_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./logs:/app/logs

  # Celery Worker для фоновых задач
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: zakupki_celery_worker
    command: celery -A app.tasks.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://zakupki_user:zakupki_password@postgres:5432/zakupki_db
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - zakupki_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./logs:/app/logs

  # Celery Beat для планировщика задач
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: zakupki_celery_beat
    command: celery -A app.tasks.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://zakupki_user:zakupki_password@postgres:5432/zakupki_db
      - REDIS_URL=redis://redis:6379
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - zakupki_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./logs:/app/logs

  # Nginx для раздачи статики и проксирования API
  nginx:
    image: nginx:alpine
    container_name: zakupki_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - zakupki_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  zakupki_network:
    driver: bridge
